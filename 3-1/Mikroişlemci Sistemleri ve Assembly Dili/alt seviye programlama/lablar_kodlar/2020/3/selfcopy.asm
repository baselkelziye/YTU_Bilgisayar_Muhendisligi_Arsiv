;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Pzt Eki 7 2019
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
	
STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
DIGITS  DB 0C0H, 0F9H ;array definition
DATA    ENDS


START PROC


MOV AX, DATA
MOV DS, AX

;You may write one time jobs here
 xor ax,ax
 mov al,081h
 mov dx, 0afh
 out dx,al
 
 ;;------
 ;mov al , 01h
 ;mov dx,0a9h; BURADA 7SEGLERI YAKMAYA CALISTIM
 ;out dx,al
 ;-------
 
 ;--------
;MOV DX, 0ADH
;MOV AL , 040H ;;; PORT C5 DEN OUTPUT VERDIM
;OUT DX , AL
;------

;-------
;MOV BL,02H
;IN AL,DX  ;;;PORT C LOWER(0123) OKUDUM
;MOV BL,AL
;--------
MAINLOOP:
;-----------
;mov dx,0abh
;mov al,01h
;out dx, al
;shl al,1
;out dx, al
;shl al,1
;out dx, al ;;;PORT B DEN SIRAYLA OUTPUT VERDIM LAMBALARI SIRAYLA YAKTIM
;shl al,1
;out dx, al
;shl al,1
;out dx, al
;----------- 
 

   ;Write Your Code Here

   ;Example Procedure Call:
;   PUSH AX ;Save Working Value
;   CALL READ_FROM_ARRAY
;   MOV BL, AL ;Move AL to BL (which temporarly contains value of DIGITS[SI])
;   POP AX ;retrieve Working Value 
   
;   CALL WAIT_A_LITTLE ;spend some time
   
   
   
JMP MAINLOOP


RET
START ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
READ_FROM_ARRAY PROC NEAR

MOV SI,0
MOV AL, DIGITS[SI]

RET
READ_FROM_ARRAY ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
WAIT_A_LITTLE PROC NEAR

;Remember to save previous values
;Looping to spend sometime

MOV CL, 00AH
LOOP1: LOOP LOOP1

RET
WAIT_A_LITTLE ENDP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


CODE    ENDS
        END START